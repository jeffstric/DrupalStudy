<?php

/**
 *  author  :   jeffstric
 *  email   :   jeffstricg@gmail.com
 *  date    :   2012-12-12
 *  time    :   20:01:31
 * */
define('IMAGEFACTORYKEY' , 'picture');
define('IMAGEFACTORYTABLENAME' , 'image_factory');

/**
 * Implementation of hook_permission() 
 */
function imageFactory_permission()
{
    return array(
	'imageFactory image upload' => array(
	    'title' => t('image imageFactory upload') ,
	    'description' => t('Allow users upload image to imageFactory') ,
	) ,
    );
}

function imageFactory_menu()
{
    $items[ 'admin/imageFactory/upload' ] = array(
	'title' => 'upload image' ,
	'page callback' => 'drupal_get_form' ,
	'page arguments' => array( 'imageFactory_fileUploadForm' ) ,
	'access callback' => 'user_access' ,
	'access arguments' => array( 'imageFactory image upload' ) ,
	'type' => MENU_NORMAL_ITEM ,
	'weight' => 1
    );
    $items[ 'admin/imageFactory/test' ] = array(
	'title' => 'upload image test' ,
	'page callback' => 'imageFactory_test' ,
	'access callback' => TRUE ,
	'type' => MENU_NORMAL_ITEM ,
	'weight' => 1
    );
    return $items;
}

/**
 * Define a form. 
 */
function imageFactory_fileUploadForm()
{
    $form[ '#method' ] = 'post';
    $form[ '#attributes' ][ 'enctype' ] = 'multipart/form-data';
    $form[ IMAGEFACTORYKEY ] = array(
	'#type' => 'file' ,
	'#title' => t('Upload picture') ,
	'#size' => 48 ,
	'#description' => t('The picture you want upload.') ,
    );
    $form[ 'submit' ] = array(
	'#type' => 'submit' ,
	'#value' => t('Submit')
    );
    return $form;
}

function imageFactory_fileUploadForm_submit( $form , &$form_state )
{
    $validators = array(
	'file_validate_extensions' => array( 'jpg png gif' ) ,
    );
    $year = date('Y');
    $month = date('m');
    $day = date('d');
    $destinationPath = 'public://' . 'imageFactory' . '/' . $year . '/' . $month . '/' . $day . '/' . rand(0 , 9999);

    if ( !is_dir($destinationPath) ) {
	drupal_mkdir($destinationPath , 0777 , TRUE);
    }

    $file = file_save_upload(IMAGEFACTORYKEY , $validators , $destinationPath);
    if ( $file ) {
	$file->status = 1;
	file_save($file);
	drupal_set_message(t('load file success!'));
	dpm($file);

	$record = new stdClass();
	$record->fid = $file->fid;
	try {
	    $message = drupal_write_record(IMAGEFACTORYTABLENAME , $record);
	} catch ( Exception $e ) {
	    $message = $e->getMessage();
	}
    }
}

function imageFactory_test()
{
    $record = new stdClass();
    $record->fid = 1;
    try {
	$message = drupal_write_record(IMAGEFACTORYTABLENAME , $record);
    } catch ( Exception $e ) {
	$message = $e->getMessage();
    }
    return $message;
}